import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.sonarqube' version "2.7"
    id 'idea'
    id 'org.flywaydb.flyway' version "6.0.8"
}

group 'telraam'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}
application {
    mainClassName = 'telraam.App'
}

task runDev {

    finalizedBy {
        run.environment("CONFIG_KEY", "DEVELOPMENT")
        run
    }
}
task runProd {

    finalizedBy {
        run.environment("CONFIG_KEY", "PRODUCTION")
        run
    }
}
idea {
    module {
        inheritOutputDirs = true
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    implementation('org.xerial:sqlite-jdbc:3.8.11.2')
    implementation('org.postgresql:postgresql:42.2.8')
}

test {
    environment("CONFIG_KEY", "TESTING")
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/coverage")
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}
def prodProps = new Properties()
file("src/main/resources/telraam/prodConfig.properties").withInputStream {
    prodProps.load(it)
}
task migrateProductionDatabase(type: FlywayMigrateTask) {
    url = prodProps.getProperty("DB_URL")
}
def devProps = new Properties()
file("src/main/resources/telraam/devConfig.properties").withInputStream {
    devProps.load(it)
}
task migrateDevelopmentDatabase(type: FlywayMigrateTask) {
    url = devProps.getProperty("DB_URL")
}
def testProps = new Properties()
file("src/main/resources/telraam/testConfig.properties").withInputStream {
    testProps.load(it)
}
task migrateTestingDatabase(type: FlywayMigrateTask) {
    url = testProps.getProperty("DB_URL")
}
